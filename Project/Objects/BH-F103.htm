<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\BH-F103.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\BH-F103.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu Oct 21 10:35:37 2021
<BR><P>
<H3>Maximum Stack Usage =         80 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Init_Arm &rArr; ClawA_OPEN &rArr; ClawA_CTL &rArr; TIM3_CH_Change &rArr; TIM_OC4Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">TIM6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[46]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[48]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[98]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[49]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[99]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[9a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[9b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[9d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[9e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[9f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>AA_BACKUP</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.AA_BACKUP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AA_BACKUP
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Direction
</UL>

<P><STRONG><a name="[4f]"></a>AA_GOFORWARD</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.AA_GOFORWARD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AA_GOFORWARD
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Direction
</UL>

<P><STRONG><a name="[50]"></a>AA_STOP</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.AA_STOP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AA_STOP
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Direction
</UL>

<P><STRONG><a name="[51]"></a>AOUTPUT_Config</STRONG> (Thumb, 300 bytes, Stack size 8 bytes, aoutput.o(i.AOUTPUT_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AOUTPUT_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
</UL>

<P><STRONG><a name="[54]"></a>ArmB_CTL</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.ArmB_CTL))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ArmB_CTL &rArr; TIM3_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Arm
</UL>

<P><STRONG><a name="[56]"></a>ArmC_CTL</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.ArmC_CTL))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ArmC_CTL &rArr; TIM3_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Arm
</UL>

<P><STRONG><a name="[57]"></a>ArmD_CTL</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.ArmD_CTL))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ArmD_CTL &rArr; TIM3_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Arm
</UL>

<P><STRONG><a name="[58]"></a>BB_BACKUP</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.BB_BACKUP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BB_BACKUP
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Direction
</UL>

<P><STRONG><a name="[59]"></a>BB_GOFORWARD</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.BB_GOFORWARD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BB_GOFORWARD
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Direction
</UL>

<P><STRONG><a name="[5a]"></a>BB_STOP</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.BB_STOP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BB_STOP
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Direction
</UL>

<P><STRONG><a name="[5b]"></a>BUZZER_CLOSE</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, aoutput.o(i.BUZZER_CLOSE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BUZZER_CLOSE
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_OPEN
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_CLOSE
</UL>

<P><STRONG><a name="[5c]"></a>BUZZER_OPEN</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, aoutput.o(i.BUZZER_OPEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BUZZER_OPEN
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_OPEN
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_CLOSE
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>CAR_BACK</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, main.o(i.CAR_BACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CAR_BACK &rArr; WheelD_Speed &rArr; TIM2_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Speed
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Direction
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Speed
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Direction
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Speed
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Direction
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Speed
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Direction
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>CAR_BLEFT</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.CAR_BLEFT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CAR_BLEFT &rArr; WheelD_Speed &rArr; TIM2_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Speed
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Direction
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Speed
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Direction
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Speed
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Direction
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Speed
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Direction
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>CAR_BRIGHT</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.CAR_BRIGHT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CAR_BRIGHT &rArr; WheelD_Speed &rArr; TIM2_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Speed
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Direction
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Speed
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Direction
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Speed
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Direction
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Speed
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Direction
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>CAR_FLEFT</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main.o(i.CAR_FLEFT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CAR_FLEFT &rArr; WheelD_Speed &rArr; TIM2_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Speed
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Direction
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Speed
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Direction
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Speed
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Direction
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Speed
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Direction
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>CAR_FORWARD</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main.o(i.CAR_FORWARD))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CAR_FORWARD &rArr; WheelD_Speed &rArr; TIM2_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Speed
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Direction
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Speed
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Direction
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Speed
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Direction
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Speed
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Direction
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>CAR_FRIGHT</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main.o(i.CAR_FRIGHT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CAR_FRIGHT &rArr; WheelD_Speed &rArr; TIM2_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Speed
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Direction
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Speed
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Direction
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Speed
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Direction
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Speed
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Direction
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>CAR_STOP</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.CAR_STOP))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CAR_STOP &rArr; WheelD_Direction &rArr; DD_STOP
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Direction
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Direction
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Direction
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Direction
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_OPEN
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_CLOSE
</UL>

<P><STRONG><a name="[6c]"></a>CC_BACKUP</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.CC_BACKUP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CC_BACKUP
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Direction
</UL>

<P><STRONG><a name="[6d]"></a>CC_GOFORWARD</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.CC_GOFORWARD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CC_GOFORWARD
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Direction
</UL>

<P><STRONG><a name="[6e]"></a>CC_STOP</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.CC_STOP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CC_STOP
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Direction
</UL>

<P><STRONG><a name="[6f]"></a>ClawA_CLOSE</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(i.ClawA_CLOSE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ClawA_CLOSE &rArr; ClawA_CTL &rArr; TIM3_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClawA_CTL
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>ClawA_CTL</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.ClawA_CTL))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ClawA_CTL &rArr; TIM3_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClawA_OPEN
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClawA_CLOSE
</UL>

<P><STRONG><a name="[71]"></a>ClawA_OPEN</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(i.ClawA_OPEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ClawA_OPEN &rArr; ClawA_CTL &rArr; TIM3_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClawA_CTL
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Arm
</UL>

<P><STRONG><a name="[72]"></a>DD_BACKUP</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.DD_BACKUP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DD_BACKUP
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Direction
</UL>

<P><STRONG><a name="[73]"></a>DD_GOFORWARD</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.DD_GOFORWARD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DD_GOFORWARD
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Direction
</UL>

<P><STRONG><a name="[74]"></a>DD_STOP</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, aoutput.o(i.DD_STOP))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DD_STOP
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Direction
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>Delay_1s</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, main.o(i.Delay_1s))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Delay_1s &rArr; Delayms
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayms
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Arm
</UL>

<P><STRONG><a name="[76]"></a>Delayms</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.Delayms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delayms
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_OPEN
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_CLOSE
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_1s
</UL>

<P><STRONG><a name="[77]"></a>GENERAL_TIM2_GPIO_Config</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, bsp_generaltim.o(i.GENERAL_TIM2_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GENERAL_TIM2_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_INIT
</UL>

<P><STRONG><a name="[78]"></a>GENERAL_TIM2_Mode_Config</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp_generaltim.o(i.GENERAL_TIM2_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GENERAL_TIM2_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_INIT
</UL>

<P><STRONG><a name="[7b]"></a>GENERAL_TIM3_GPIO_Config</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, bsp_generaltim.o(i.GENERAL_TIM3_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GENERAL_TIM3_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_INIT
</UL>

<P><STRONG><a name="[7c]"></a>GENERAL_TIM3_Mode_Config</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp_generaltim.o(i.GENERAL_TIM3_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GENERAL_TIM3_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_INIT
</UL>

<P><STRONG><a name="[7d]"></a>GENERAL_TIM4_GPIO_Config</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, bsp_generaltim.o(i.GENERAL_TIM4_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GENERAL_TIM4_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_INIT
</UL>

<P><STRONG><a name="[7e]"></a>GENERAL_TIM4_Mode_Config</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bsp_generaltim.o(i.GENERAL_TIM4_Mode_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GENERAL_TIM4_Mode_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_INIT
</UL>

<P><STRONG><a name="[7f]"></a>GENERAL_TIM_INIT</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.GENERAL_TIM_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GENERAL_TIM_INIT &rArr; GENERAL_TIM4_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM4_Mode_Config
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM4_GPIO_Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM3_Mode_Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM3_GPIO_Config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM2_Mode_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM2_GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>GPIO_INIT</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, main.o(i.GPIO_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_INIT &rArr; AOUTPUT_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AOUTPUT_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM4_GPIO_Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM3_GPIO_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM2_GPIO_Config
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AOUTPUT_Config
</UL>

<P><STRONG><a name="[4e]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_C6V4_CLOSE
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_B20V_CLOSE
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_A24V_CLOSE
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DD_STOP
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DD_GOFORWARD
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DD_BACKUP
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_STOP
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_GOFORWARD
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_BACKUP
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_OPEN
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_STOP
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_GOFORWARD
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_BACKUP
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AA_STOP
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AA_GOFORWARD
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AA_BACKUP
</UL>

<P><STRONG><a name="[4d]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_C6V4_OPEN
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_B20V_OPEN
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_A24V_OPEN
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DD_GOFORWARD
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DD_BACKUP
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_GOFORWARD
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_BACKUP
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_CLOSE
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_GOFORWARD
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_BACKUP
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AA_GOFORWARD
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AA_BACKUP
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>Init_Arm</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, main.o(i.Init_Arm))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Init_Arm &rArr; ClawA_OPEN &rArr; ClawA_CTL &rArr; TIM3_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RotaE_CTL
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_1s
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClawA_OPEN
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmD_CTL
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmC_CTL
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmB_CTL
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>POWER_A24V_CLOSE</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, aoutput.o(i.POWER_A24V_CLOSE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = POWER_A24V_CLOSE
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_CLOSE
</UL>

<P><STRONG><a name="[84]"></a>POWER_A24V_OPEN</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, aoutput.o(i.POWER_A24V_OPEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = POWER_A24V_OPEN
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_OPEN
</UL>

<P><STRONG><a name="[85]"></a>POWER_B20V_CLOSE</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, aoutput.o(i.POWER_B20V_CLOSE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = POWER_B20V_CLOSE
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_CLOSE
</UL>

<P><STRONG><a name="[86]"></a>POWER_B20V_OPEN</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, aoutput.o(i.POWER_B20V_OPEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = POWER_B20V_OPEN
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_OPEN
</UL>

<P><STRONG><a name="[87]"></a>POWER_C6V4_CLOSE</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, aoutput.o(i.POWER_C6V4_CLOSE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = POWER_C6V4_CLOSE
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_CLOSE
</UL>

<P><STRONG><a name="[88]"></a>POWER_C6V4_OPEN</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, aoutput.o(i.POWER_C6V4_OPEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = POWER_C6V4_OPEN
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_OPEN
</UL>

<P><STRONG><a name="[89]"></a>POWER_CLOSE</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(i.POWER_CLOSE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = POWER_CLOSE &rArr; CAR_STOP &rArr; WheelD_Direction &rArr; DD_STOP
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_C6V4_CLOSE
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_B20V_CLOSE
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_A24V_CLOSE
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_OPEN
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_CLOSE
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayms
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_STOP
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>POWER_OPEN</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.POWER_OPEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = POWER_OPEN &rArr; CAR_STOP &rArr; WheelD_Direction &rArr; DD_STOP
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_C6V4_OPEN
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_B20V_OPEN
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_A24V_OPEN
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_OPEN
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_CLOSE
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayms
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_STOP
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM4_Mode_Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM3_Mode_Config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM2_Mode_Config
</UL>

<P><STRONG><a name="[52]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM4_GPIO_Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM3_GPIO_Config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM2_GPIO_Config
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AOUTPUT_Config
</UL>

<P><STRONG><a name="[82]"></a>RotaE_CTL</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.RotaE_CTL))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RotaE_CTL &rArr; TIM4_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_CH_Change
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Arm
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[8e]"></a>TIM2_CH_Change</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, bsp_generaltim.o(i.TIM2_CH_Change))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM2_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelD_Speed
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelC_Speed
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelB_Speed
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WheelA_Speed
</UL>

<P><STRONG><a name="[55]"></a>TIM3_CH_Change</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, bsp_generaltim.o(i.TIM3_CH_Change))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM3_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClawA_CTL
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmD_CTL
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmC_CTL
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmB_CTL
</UL>

<P><STRONG><a name="[8b]"></a>TIM4_CH_Change</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, bsp_generaltim.o(i.TIM4_CH_Change))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM4_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RotaE_CTL
</UL>

<P><STRONG><a name="[97]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_CH_Change
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>

<P><STRONG><a name="[8f]"></a>TIM_OC1Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_CH_Change
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>

<P><STRONG><a name="[90]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_CH_Change
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>

<P><STRONG><a name="[91]"></a>TIM_OC2Init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_CH_Change
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>

<P><STRONG><a name="[92]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_CH_Change
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>

<P><STRONG><a name="[93]"></a>TIM_OC3Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_CH_Change
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>

<P><STRONG><a name="[94]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_CH_Change
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>

<P><STRONG><a name="[95]"></a>TIM_OC4Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC4Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_CH_Change
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>

<P><STRONG><a name="[96]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC4PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_CH_Change
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_CH_Change
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>

<P><STRONG><a name="[7a]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM4_Mode_Config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM3_Mode_Config
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM2_Mode_Config
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>WheelA_Direction</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.WheelA_Direction))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WheelA_Direction &rArr; AA_STOP
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AA_STOP
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AA_GOFORWARD
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AA_BACKUP
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_STOP
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FRIGHT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FORWARD
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FLEFT
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BRIGHT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BLEFT
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BACK
</UL>

<P><STRONG><a name="[5e]"></a>WheelA_Speed</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.WheelA_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WheelA_Speed &rArr; TIM2_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FRIGHT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FORWARD
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FLEFT
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BRIGHT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BLEFT
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BACK
</UL>

<P><STRONG><a name="[63]"></a>WheelB_Direction</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.WheelB_Direction))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WheelB_Direction &rArr; BB_STOP
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_STOP
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_GOFORWARD
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BB_BACKUP
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_STOP
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FRIGHT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FORWARD
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FLEFT
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BRIGHT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BLEFT
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BACK
</UL>

<P><STRONG><a name="[5f]"></a>WheelB_Speed</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.WheelB_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WheelB_Speed &rArr; TIM2_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FRIGHT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FORWARD
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FLEFT
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BRIGHT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BLEFT
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BACK
</UL>

<P><STRONG><a name="[64]"></a>WheelC_Direction</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.WheelC_Direction))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WheelC_Direction &rArr; CC_STOP
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_STOP
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_GOFORWARD
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CC_BACKUP
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_STOP
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FRIGHT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FORWARD
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FLEFT
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BRIGHT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BLEFT
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BACK
</UL>

<P><STRONG><a name="[60]"></a>WheelC_Speed</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.WheelC_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WheelC_Speed &rArr; TIM2_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FRIGHT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FORWARD
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FLEFT
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BRIGHT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BLEFT
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BACK
</UL>

<P><STRONG><a name="[65]"></a>WheelD_Direction</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.WheelD_Direction))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WheelD_Direction &rArr; DD_STOP
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DD_STOP
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DD_GOFORWARD
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DD_BACKUP
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_STOP
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FRIGHT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FORWARD
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FLEFT
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BRIGHT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BLEFT
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BACK
</UL>

<P><STRONG><a name="[61]"></a>WheelD_Speed</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(i.WheelD_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WheelD_Speed &rArr; TIM2_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_CH_Change
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FRIGHT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FORWARD
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FLEFT
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BRIGHT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BLEFT
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BACK
</UL>

<P><STRONG><a name="[a0]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a1]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a2]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 576 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = main &rArr; Init_Arm &rArr; ClawA_OPEN &rArr; ClawA_CTL &rArr; TIM3_CH_Change &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_OPEN
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_CLOSE
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RotaE_CTL
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_OPEN
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POWER_CLOSE
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Arm
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GENERAL_TIM_INIT
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayms
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_1s
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClawA_OPEN
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClawA_CLOSE
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_STOP
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FRIGHT
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FORWARD
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_FLEFT
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BRIGHT
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BLEFT
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAR_BACK
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmD_CTL
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmC_CTL
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArmB_CTL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[8c]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[8d]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
